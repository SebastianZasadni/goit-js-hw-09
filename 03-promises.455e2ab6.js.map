{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAgB,SAACC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzBL,EACFI,EAAQ,iBAERC,EAAO,Q,KAKEC,SAASC,cAAc,QAgC/BC,iBAAiB,UA9BF,SAACC,GACnBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGrBC,EAAI,EACJnB,EAAWoB,SAASF,EAAOG,OAC3BpB,EAAYmB,SAASH,EAAKI,OAC1BC,EAAaF,SAASJ,EAAMK,OAGhCE,YAAW,WACTxB,IACOyB,MAAK,SAAAC,G,OAAQC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAiCC,OAARV,EAAE,QAAiBU,OAAXP,EAAW,M,IAC/EQ,OAAI,SAAAC,G,OAASL,EAAA7B,GAAS8B,OAAOK,QAAQ,sBAAgCH,OAARV,EAAE,QAAiBU,OAAXP,EAAW,M,IACjFH,GAAG,EACL,IAAMc,EAAgBC,aAAY,WAC5Bf,EAAInB,GACNmB,GAAK,EACLpB,IACCyB,MAAK,SAAAC,G,OAAQC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAiCC,OAARV,EAAE,QAAiBU,OAAXP,EAAW,M,IAC/EQ,OAAI,SAAAC,G,OAASL,EAAA7B,GAAS8B,OAAOK,QAAQ,sBAA8BH,OAARV,EAAE,QAAiBU,OAAXP,EAAW,M,IACjFA,GAAcrB,GAEdkC,cAAcF,E,GACThC,E,GACHqB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromise = (position, delayStep) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  if (shouldResolve) {\n    resolve(\"success value\");\n  } else {\n    reject(\"error\");\n  }\n})\n};\n\nconst form = document.querySelector('form');\n\nconst handleSubmit= (event) => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  \n    let i = 0;\n    let position = parseInt(amount.value);\n    let delayStep = parseInt(step.value);\n    let firstDelay = parseInt(delay.value);\n        \n         \n    setTimeout(() => {\n      createPromise(position, firstDelay)\n            .then(user => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${firstDelay}ms`))\n            .catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${firstDelay}ms`));\n            i += 1;\n            const timerIdSecond = setInterval(() => {\n              if (i < position){\n                i += 1;\n                createPromise(position, delayStep)\n                .then(user => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${firstDelay}ms`))\n                .catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${firstDelay}ms`));\n                firstDelay += delayStep;}             \n             else{\n                clearInterval(timerIdSecond);}\n                  }, delayStep);\n               }, firstDelay);\n               \n };\nform.addEventListener('submit', handleSubmit);\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delayStep","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay","step","amount","i","parseInt","value","firstDelay","setTimeout","then","user","$parcel$interopDefault","Notify","success","concat","catch","error","failure","timerIdSecond","setInterval","clearInterval"],"version":3,"file":"03-promises.455e2ab6.js.map"}