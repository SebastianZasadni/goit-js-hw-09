{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWaC,SAASC,cAAc,QAuB/BC,iBAAiB,UArBDC,IACnBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACR,IAAIC,EAAI,EACJC,EAAWC,SAASN,EAAMO,OAC1BC,EAAYF,SAASL,EAAKM,OAC1BE,QAAUC,aAAY,KAClBN,EAAIF,EAAOK,OACfH,GAAK,EArBb,SAAuBC,EAAUG,GACTG,KAAKC,SAAW,GAEpCC,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBV,QAAiBG,OAE9DK,EAAArB,GAASsB,OAAOE,QAAQ,sBAAoBX,QAAeG,M,CAiBvDS,CAAcZ,EAAUG,GACxBH,GAAYG,GAGZU,cAAcT,QAAQ,GAEnBR,EAAKM,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delayStep) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delayStep}ms`);\n  } else {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delayStep}ms`);\n  }\n};\n\nconst form = document.querySelector('form');\n\nconst handleSubmit= (event) => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n    let i = 0;\n    let position = parseInt(delay.value);\n    let delayStep = parseInt(step.value);\n        timerId = setInterval(() => {\n        if (i < amount.value){\n        i += 1;\n        createPromise(position, delayStep);\n        position += delayStep;         \n        }\n        else{\n        clearInterval(timerId);\n        }\n        }, step.value);\n \n    \n };\nform.addEventListener('submit', handleSubmit);\n\n\n  \n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","i","position","parseInt","value","delayStep","timerId","setInterval","Math","random","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$createPromise","clearInterval"],"version":3,"file":"03-promises.6d6d52ad.js.map"}