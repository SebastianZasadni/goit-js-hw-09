{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAgB,CAACC,EAAUC,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBL,EACFI,EAAQ,iBAERC,EAAO,QAAQ,GAEjB,EAGWC,SAASC,cAAc,QAiC/BC,iBAAiB,UA/BDC,IACnBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAER,IAAIC,EAAI,EACJlB,EAAWmB,SAASH,EAAOI,OAC3BnB,EAAYkB,SAASJ,EAAKK,OAC1BC,EAAaF,SAASL,EAAMM,OAGhC,MAAME,EAAcC,aAAY,KAC9BxB,IACOyB,MAAKC,GAAQC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBV,QAAUG,SAAiBQ,OAChFC,GAAUJ,EAAA7B,GAAQ8B,OAACI,QAAO,sBAASb,QAAyBG,SAChEH,GAAG,EACL,MAAMc,EAAgBT,aAAY,KAC5BL,EAAIlB,GACNkB,GAAK,EACLnB,IACCyB,MAAKC,GAAQC,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqBV,QAAUG,SAAiBQ,OAChFC,GAAUJ,EAAA7B,GAAQ8B,OAACI,QAAO,sBAASb,QAAuBG,SAChEA,GAAcpB,GAEdgC,cAAcD,EAAc,GACvB/B,GACTgC,cAAcX,EAAY,GAC/BD,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst createPromise = (position, delayStep) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  if (shouldResolve) {\n    resolve(\"success value\");\n  } else {\n    reject(\"error\");\n  }\n})\n};\n\nconst form = document.querySelector('form');\n\nconst handleSubmit= (event) => {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  \n    let i = 0;\n    let position = parseInt(amount.value);\n    let delayStep = parseInt(step.value);\n    let firstDelay = parseInt(delay.value);\n        \n         \n    const timerIdMain = setInterval(() => {\n      createPromise(position, firstDelay)\n            .then(user => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${firstDelay}ms`))\n            .catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${firstDelay}ms`));\n            i += 1;\n            const timerIdSecond = setInterval(() => {\n              if (i < position){\n                i += 1;\n                createPromise(position, delayStep)\n                .then(user => Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${firstDelay}ms`))\n                .catch(error => Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${firstDelay}ms`));\n                firstDelay += delayStep;}             \n             else{\n                clearInterval(timerIdSecond);}\n                  }, delayStep);\n            clearInterval(timerIdMain);\n    }, firstDelay);\n               \n };\nform.addEventListener('submit', handleSubmit);\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delayStep","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","i","parseInt","value","firstDelay","timerIdMain","setInterval","then","user","$parcel$interopDefault","Notify","success","catch","error","failure","timerIdSecond","clearInterval"],"version":3,"file":"03-promises.0b1458c8.js.map"}